{"ast":null,"code":"var _jsxFileName = \"/Users/margaritaolaya/Desktop/Juanky - Practica/frontend/src/context/AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Verificar token al iniciar la app\n  useEffect(() => {\n    const verifyToken = async () => {\n      if (!token) {\n        setLoading(false);\n        return;\n      }\n      try {\n        const res = await fetch(\"http://localhost:5001/auth/user\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (res.ok) {\n          const data = await res.json();\n          setUser(data);\n        } else {\n          localStorage.removeItem(\"token\");\n          setToken(null);\n        }\n      } catch {\n        localStorage.removeItem(\"token\");\n        setToken(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n    verifyToken();\n  }, [token]);\n  const login = newToken => {\n    localStorage.setItem(\"token\", newToken);\n    setToken(newToken);\n  };\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setToken(null);\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token,\n      user,\n      login,\n      logout,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"YLLjqfutl9KSzJ/Q7Ha0bLupn0Y=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","token","setToken","localStorage","getItem","user","setUser","loading","setLoading","verifyToken","res","fetch","headers","Authorization","ok","data","json","removeItem","login","newToken","setItem","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/margaritaolaya/Desktop/Juanky - Practica/frontend/src/context/AuthContext.jsx"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from \"react\";\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Verificar token al iniciar la app\n  useEffect(() => {\n    const verifyToken = async () => {\n      if (!token) {\n        setLoading(false);\n        return;\n      }\n\n      try {\n        const res = await fetch(\"http://localhost:5001/auth/user\", {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n\n        if (res.ok) {\n          const data = await res.json();\n          setUser(data);\n        } else {\n          localStorage.removeItem(\"token\");\n          setToken(null);\n        }\n      } catch {\n        localStorage.removeItem(\"token\");\n        setToken(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    verifyToken();\n  }, [token]);\n\n  const login = (newToken) => {\n    localStorage.setItem(\"token\", newToken);\n    setToken(newToken);\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setToken(null);\n    setUser(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ token, user, login, logout, loading }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAACU,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EACjE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMe,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI,CAACR,KAAK,EAAE;QACVO,UAAU,CAAC,KAAK,CAAC;QACjB;MACF;MAEA,IAAI;QACF,MAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;UACzDC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUZ,KAAK;UAAG;QAC9C,CAAC,CAAC;QAEF,IAAIS,GAAG,CAACI,EAAE,EAAE;UACV,MAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;UAC7BV,OAAO,CAACS,IAAI,CAAC;QACf,CAAC,MAAM;UACLZ,YAAY,CAACc,UAAU,CAAC,OAAO,CAAC;UAChCf,QAAQ,CAAC,IAAI,CAAC;QAChB;MACF,CAAC,CAAC,MAAM;QACNC,YAAY,CAACc,UAAU,CAAC,OAAO,CAAC;QAChCf,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,SAAS;QACRM,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACR,KAAK,CAAC,CAAC;EAEX,MAAMiB,KAAK,GAAIC,QAAQ,IAAK;IAC1BhB,YAAY,CAACiB,OAAO,CAAC,OAAO,EAAED,QAAQ,CAAC;IACvCjB,QAAQ,CAACiB,QAAQ,CAAC;EACpB,CAAC;EAED,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnBlB,YAAY,CAACc,UAAU,CAAC,OAAO,CAAC;IAChCf,QAAQ,CAAC,IAAI,CAAC;IACdI,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACEV,OAAA,CAACC,WAAW,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAAEtB,KAAK;MAAEI,IAAI;MAAEa,KAAK;MAAEG,MAAM;MAAEd;IAAQ,CAAE;IAAAR,QAAA,EAClEA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC3B,EAAA,CApDWF,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAsDzB,OAAO,MAAM+B,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMtC,UAAU,CAACK,WAAW,CAAC;AAAA;AAACiC,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}