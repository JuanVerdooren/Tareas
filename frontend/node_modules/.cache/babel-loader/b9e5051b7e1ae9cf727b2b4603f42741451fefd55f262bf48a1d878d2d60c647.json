{"ast":null,"code":"var _jsxFileName = \"/Users/margaritaolaya/Desktop/Juanky - Practica/frontend/src/pages/AdminTareas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport TaskForm from \"../components/TaskForm\";\nimport TaskList from \"../components/TaskList\";\nimport { useAuth } from \"../context/AuthContext\";\nimport { motion } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const {\n    token\n  } = useAuth();\n  const [usuarios, setUsuarios] = useState([]);\n  const [tareas, setTareas] = useState([]);\n  const [formData, setFormData] = useState({\n    titulo: \"\",\n    descripcion: \"\",\n    fecha: \"\",\n    prioridad: \"\",\n    categoria: \"\",\n    usuario: \"\"\n  });\n  const [editingTaskId, setEditingTaskId] = useState(null);\n  const cargarUsuariosYTareas = async () => {\n    try {\n      const [usuariosRes, tareasRes] = await Promise.all([fetch(\"http://localhost:5001/auth/users\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }), fetch(\"http://localhost:5001/tareas\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })]);\n      const usuariosData = await usuariosRes.json();\n      const tareasData = await tareasRes.json();\n      setUsuarios(usuariosData);\n      setTareas(tareasData);\n    } catch (error) {\n      console.error(\"Error al cargar usuarios o tareas\", error);\n    }\n  };\n  useEffect(() => {\n    cargarUsuariosYTareas();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const url = editingTaskId ? `http://localhost:5001/tareas/${editingTaskId}` : \"http://localhost:5001/tareas\";\n      const method = editingTaskId ? \"PUT\" : \"POST\";\n      const response = await fetch(url, {\n        method,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(formData)\n      });\n      if (!response.ok) throw new Error(\"Error al guardar tarea\");\n      setFormData({\n        titulo: \"\",\n        descripcion: \"\",\n        fecha: \"\",\n        prioridad: \"\",\n        categoria: \"\",\n        usuario: \"\"\n      });\n      setEditingTaskId(null);\n      cargarUsuariosYTareas();\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n  const handleEdit = tarea => {\n    setFormData(tarea);\n    setEditingTaskId(tarea._id);\n  };\n  const handleDelete = async id => {\n    try {\n      await fetch(`http://localhost:5001/tareas/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      cargarUsuariosYTareas();\n    } catch (error) {\n      console.error(\"Error al eliminar tarea\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"container mt-4\",\n    initial: {\n      opacity: 0,\n      y: 30\n    },\n    animate: {\n      opacity: 1,\n      y: 0\n    },\n    exit: {\n      opacity: 0\n    },\n    transition: {\n      duration: 0.6\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(TaskForm, {\n          handleSubmit: handleSubmit,\n          formData: formData,\n          setFormData: setFormData,\n          editingTaskId: editingTaskId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: usuarios.map(usuario => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"fw-bold text-primary\",\n            children: usuario.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n            tareas: tareas.filter(t => t.usuario === usuario._id),\n            onEdit: handleEdit,\n            onDelete: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)]\n        }, usuario._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"RsI723Exxx3Thbon4iT7opQUPOE=\", false, function () {\n  return [useAuth];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useEffect","useState","TaskForm","TaskList","useAuth","motion","jsxDEV","_jsxDEV","AdminDashboard","_s","token","usuarios","setUsuarios","tareas","setTareas","formData","setFormData","titulo","descripcion","fecha","prioridad","categoria","usuario","editingTaskId","setEditingTaskId","cargarUsuariosYTareas","usuariosRes","tareasRes","Promise","all","fetch","headers","Authorization","usuariosData","json","tareasData","error","console","handleSubmit","e","preventDefault","url","method","response","body","JSON","stringify","ok","Error","message","handleEdit","tarea","_id","handleDelete","id","div","className","initial","opacity","y","animate","exit","transition","duration","children","fileName","_jsxFileName","lineNumber","columnNumber","map","username","filter","t","onEdit","onDelete","_c","$RefreshReg$"],"sources":["/Users/margaritaolaya/Desktop/Juanky - Practica/frontend/src/pages/AdminTareas.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport TaskForm from \"../components/TaskForm\";\nimport TaskList from \"../components/TaskList\";\nimport { useAuth } from \"../context/AuthContext\";\nimport { motion } from \"framer-motion\";\n\nconst AdminDashboard = () => {\n  const { token } = useAuth();\n  const [usuarios, setUsuarios] = useState([]);\n  const [tareas, setTareas] = useState([]);\n  const [formData, setFormData] = useState({\n    titulo: \"\",\n    descripcion: \"\",\n    fecha: \"\",\n    prioridad: \"\",\n    categoria: \"\",\n    usuario: \"\",\n  });\n  const [editingTaskId, setEditingTaskId] = useState(null);\n\n  const cargarUsuariosYTareas = async () => {\n    try {\n      const [usuariosRes, tareasRes] = await Promise.all([\n        fetch(\"http://localhost:5001/auth/users\", {\n          headers: { Authorization: `Bearer ${token}` },\n        }),\n        fetch(\"http://localhost:5001/tareas\", {\n          headers: { Authorization: `Bearer ${token}` },\n        }),\n      ]);\n\n      const usuariosData = await usuariosRes.json();\n      const tareasData = await tareasRes.json();\n      setUsuarios(usuariosData);\n      setTareas(tareasData);\n    } catch (error) {\n      console.error(\"Error al cargar usuarios o tareas\", error);\n    }\n  };\n\n  useEffect(() => {\n    cargarUsuariosYTareas();\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const url = editingTaskId\n        ? `http://localhost:5001/tareas/${editingTaskId}`\n        : \"http://localhost:5001/tareas\";\n      const method = editingTaskId ? \"PUT\" : \"POST\";\n\n      const response = await fetch(url, {\n        method,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify(formData),\n      });\n\n      if (!response.ok) throw new Error(\"Error al guardar tarea\");\n\n      setFormData({\n        titulo: \"\",\n        descripcion: \"\",\n        fecha: \"\",\n        prioridad: \"\",\n        categoria: \"\",\n        usuario: \"\",\n      });\n      setEditingTaskId(null);\n      cargarUsuariosYTareas();\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const handleEdit = (tarea) => {\n    setFormData(tarea);\n    setEditingTaskId(tarea._id);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      await fetch(`http://localhost:5001/tareas/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      cargarUsuariosYTareas();\n    } catch (error) {\n      console.error(\"Error al eliminar tarea\", error);\n    }\n  };\n\n  return (\n    <motion.div\n      className=\"container mt-4\"\n      initial={{ opacity: 0, y: 30 }}\n      animate={{ opacity: 1, y: 0 }}\n      exit={{ opacity: 0 }}\n      transition={{ duration: 0.6 }}\n    >\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <TaskForm\n            handleSubmit={handleSubmit}\n            formData={formData}\n            setFormData={setFormData}\n            editingTaskId={editingTaskId}\n          />\n        </div>\n        <div className=\"col-md-6\">\n          {usuarios.map((usuario) => (\n            <div key={usuario._id} className=\"mb-4\">\n              <h5 className=\"fw-bold text-primary\">{usuario.username}</h5>\n              <TaskList\n                tareas={tareas.filter((t) => t.usuario === usuario._id)}\n                onEdit={handleEdit}\n                onDelete={handleDelete}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default AdminDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}