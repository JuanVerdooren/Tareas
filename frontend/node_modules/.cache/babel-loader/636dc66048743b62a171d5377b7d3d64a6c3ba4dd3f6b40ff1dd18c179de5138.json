{"ast":null,"code":"var _jsxFileName = \"/Users/margaritaolaya/Desktop/Juanky - Practica/frontend/src/components/AdminRoute.jsx\",\n  _s = $RefreshSig$();\nimport { Navigate } from \"react-router-dom\";\nimport { useAuth } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    token,\n    role,\n    loading\n  } = useAuth();\n  if (loading) return null;\n  if (!token || role !== \"admin\") {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(AdminRoute, \"o+Wc+41tCudwdonJn12Dj/dHtC8=\", false, function () {\n  return [useAuth];\n});\n_c = AdminRoute;\nexport default AdminRoute;\nvar _c;\n$RefreshReg$(_c, \"AdminRoute\");","map":{"version":3,"names":["Navigate","useAuth","jsxDEV","_jsxDEV","AdminRoute","children","_s","token","role","loading","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/margaritaolaya/Desktop/Juanky - Practica/frontend/src/components/AdminRoute.jsx"],"sourcesContent":["import { Navigate } from \"react-router-dom\";\nimport { useAuth } from \"../context/AuthContext\";\n\nconst AdminRoute = ({ children }) => {\n  const { token, role, loading } = useAuth();\n\n  if (loading) return null;\n\n  if (!token || role !== \"admin\") {\n    return <Navigate to=\"/\" />;\n  }\n\n  return children;\n};\n\nexport default AdminRoute;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM;IAAEC,KAAK;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGR,OAAO,CAAC,CAAC;EAE1C,IAAIQ,OAAO,EAAE,OAAO,IAAI;EAExB,IAAI,CAACF,KAAK,IAAIC,IAAI,KAAK,OAAO,EAAE;IAC9B,oBAAOL,OAAA,CAACH,QAAQ;MAACU,EAAE,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC5B;EAEA,OAAOT,QAAQ;AACjB,CAAC;AAACC,EAAA,CAVIF,UAAU;EAAA,QACmBH,OAAO;AAAA;AAAAc,EAAA,GADpCX,UAAU;AAYhB,eAAeA,UAAU;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}